import random

from aiogram import Router, F
from aiogram.types import Message

from functions.get_answer import answer_for_question

router = Router()


thank_you_sticker_messages = [
    "–°—Ç–∏–∫–µ—Ä—ã - —ç—Ç–æ –∫—Ä—É—Ç–æ. –õ–∞–π–∫ —Ç–µ–±–µ üëç",
    "–ú–∏–ª—ã–π —Å—Ç–∏–∫–µ—Ä. –õ–∞–π–∫ —Ç–µ–±–µ üëç",
    "–ù–µ–ø–ª–æ—Ö–æ, –Ω–µ–ø–ª–æ—Ö–æ üòé",
    "–°–æ—Ö—Ä–∞–Ω—é, –ø–æ–∂–∞–ª—É–π, —Å–µ–±–µ —ç—Ç–æ—Ç —Å—Ç–∏–∫–µ—Ä. –ù–µ –ø—Ä–æ—Ç–∏–≤ üòâ?",
    "–°—Ç–∏–∫–µ—Ä—ã —Å—Ç–∏–∫–µ—Ä–∞–º–∏, –∞ –ø—Ä–æ—Å–º–æ—Ç—Ä –∞–Ω–∫–µ—Ç –ø–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—é!",
    "–Ø –ª—é–±–ª—é —Å—Ç–∏–∫–µ—Ä—ã, –Ω–æ –¥–∞–≤–∞–π –ª—É—á—â–µ –Ω–∞–π–¥—ë–º —Ç–µ–±–µ –ø–∞—Ä—É? üòâ",
    "–°—Ç–∏–∫–µ—Ä... –ù–æ –∞–Ω–∫–µ—Ç—ã –Ω–µ –∂–¥—É—Ç! –î–∞–≤–∞–π –ø–æ—Å–º–æ—Ç—Ä–∏–º –∏—Ö üê£!",
    "–ú–Ω–µ –Ω–µ –æ—á–µ–Ω—å –ø–æ–Ω—Ä–∞–≤–∏–ª—Å—è —ç—Ç–æ—Ç —Å—Ç–∏–∫–µ—Ä, —É —Ç–µ–±—è –µ—Å—Ç—å –µ—â—ë –æ–¥–∏–Ω ü•∫?",
    "–ö–†–ê–°–û–¢–ï–ù–¨ –¢–û –ö–ê–ö–ê–Ø!"
]

thank_you_animation_messages = [
    "–ì–∏—Ñ–∫–∏ - —ç—Ç–æ –∫—Ä—É—Ç–æ. –õ–∞–π–∫ —Ç–µ–±–µ üëç",
    "–ú–∏–ª–∞—è –≥–∏—Ñ–∫–∞. –õ–∞–π–∫ —Ç–µ–±–µ üëç",
    "–ù–µ–ø–ª–æ—Ö–æ, –Ω–µ–ø–ª–æ—Ö–æ üòé",
    "–°–æ—Ö—Ä–∞–Ω—é, –ø–æ–∂–∞–ª—É–π, —Å–µ–±–µ —ç—Ç—É –≥–∏—Ñ–∫—É. –ù–µ –ø—Ä–æ—Ç–∏–≤ üòâ?",
    "–ì–∏—Ñ–∫–∞ –≥–∏—Ñ–∫–∞–º–∏, –∞ –ø—Ä–æ—Å–º–æ—Ç—Ä –∞–Ω–∫–µ—Ç –ø–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—é!",
    "–Ø –ª—é–±–ª—é –≥–∏—Ñ–∫–∞–º–∏, –Ω–æ –¥–∞–≤–∞–π –ª—É—á—â–µ –Ω–∞–π–¥—ë–º —Ç–µ–±–µ –ø–∞—Ä—É? üòâ",
    "–ì–∏—Ñ–∫–∞–º–∞... –ù–æ –∞–Ω–∫–µ—Ç—ã –Ω–µ –∂–¥—É—Ç! –î–∞–≤–∞–π –ø–æ—Å–º–æ—Ç—Ä–∏–º –∏—Ö üê£!",
    "–ú–Ω–µ –Ω–µ –æ—á–µ–Ω—å –ø–æ–Ω—Ä–∞–≤–∏–ª–∞—Å—å —ç—Ç–∞ –≥–∏—Ñ–∫–∞, —É —Ç–µ–±—è –µ—Å—Ç—å –µ—â—ë –æ–¥–Ω–∞ ü•∫?",
    "–ö–†–ê–°–û–¢–ï–ù–¨ –¢–û –ö–ê–ö–ê–Ø!"
]


@router.message(F.sticker)
async def message_with_sticker(message: Message):
    await message.answer(text=random.choice(thank_you_sticker_messages))

@router.message(F.animation)
async def message_with_gif(message: Message):
    await message.answer(text=random.choice(thank_you_animation_messages))

@router.message(F.text) #* –¢–æ—á–∫–∞ –≤—Ö–æ–¥–∞ –≤ –æ—Å–Ω–æ–≤–Ω—É—é –ª–æ–≥–∏–∫—É –±–æ—Ç–∞
async def message_with_text(message: Message):
    question, answer = await answer_for_question(question=message.text)
    await message.answer(
        text=f"<code>–í–∞—à –≤–æ–ø—Ä–æ—Å:</code>\
            \n<i>{question}</i>\
            \n\n<code>–û—Ç–≤–µ—Ç –Ω–∞ –≤–æ–ø—Ä–æ—Å:</code>\
            \n<i>{answer}</i>\
            \n\n* –°–æ —Å–ø–∏—Å–∫–æ–º –≤—Å–µ—Ö –≤–æ–ø—Ä–æ—Å–æ–≤ –º–æ–∂–Ω–æ –æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è –ø–æ –∫–æ–º–∞–Ω–¥–µ /info."
    )
